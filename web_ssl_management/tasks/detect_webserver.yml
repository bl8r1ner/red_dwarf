# web_ssl_management/tasks/detect_webserver.yml
---
- name: Gather service facts
  ansible.builtin.service_facts:

- name: Determine running web server
  ansible.builtin.set_fact:
    web_server: >-
      {{ web_server_type if ssl_action == 'install' else
      'httpd' if 'httpd.service' in ansible_facts.services and ansible_facts.services['httpd.service'].state == 'running' else
      'nginx' if 'nginx.service' in ansible_facts.services and ansible_facts.services['nginx.service'].state == 'running' else
      'unknown' }}

- name: Validate web_server value # Overkill but I would like to be sure
  ansible.builtin.assert:
    that: web_server in ['httpd', 'nginx', 'unknown']
    fail_msg: "web_server has an invalid value: {{ web_server }}. Expected 'httpd', 'nginx', or 'unknown'."
  when: ssl_action in ['install', 'reinstall']

- name: Set base web server-specific variables
  set_fact:
    ssl_conf: "{{ web_server_config[web_server].ssl_conf }}"
    service_name: "{{ web_server_config[web_server].service_name }}"
    cert_dir: "{{ web_server_config[web_server].cert_dir }}"
    key_dir: "{{ web_server_config[web_server].key_dir }}"
  when: web_server != 'unknown'
