# web_ssl_management/tasks/backup_nginx.yml
---
- name: Find existing Nginx config directories on {{ ansible_fqdn }}
  ansible.builtin.stat:
    path: "{{ item | dirname }}"
  loop: "{{ web_server_config.nginx.ssl_conf_files }}"
  register: dir_stats

- name: Identify existing Nginx SSL config files on {{ ansible_fqdn }}
  ansible.builtin.find:
    paths: "{{ item.stat.path }}"
    patterns: "{{ item.item | basename }}"
  loop: "{{ dir_stats.results | selectattr('stat.exists', 'equalto', true) | list }}"
  register: nginx_conf_files

- name: Extract existing SSL file paths from Nginx configs on {{ ansible_fqdn }}
  ansible.builtin.set_fact:
    ssl_paths: "{{ nginx_conf_files.results | json_query('[].files[*].path') | flatten | unique }}"
  when: nginx_conf_files.results | length > 0

- name: Set existing certificate and key paths
  ansible.builtin.set_fact:
    existing_cert_file: '{{ (ssl_paths | select("match", ".*\\.(crt|pem)$") | first) | default(cert_dir ~ "/fullchain.pem") }}'
    existing_key_file: '{{ (ssl_paths | select("match", ".*\\.key$") | first) | default(key_dir ~ "/" ~ ansible_fqdn ~ ".key") }}'
  vars:
    cert_dir: "{{ web_server_config.nginx.cert_dir }}"
    key_dir: "{{ web_server_config.nginx.key_dir }}"

- name: Get stats of existing nginx certificates on {{ ansible_fqdn }}
  ansible.builtin.stat:
    path: "{{ item }}"
  loop:
    - "{{ existing_cert_file }}"
    - "{{ existing_key_file }}"
  register: existing_stats

- name: Backup existing nginx certificates on {{ ansible_fqdn }}
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ backup_dir }}/{{ item.path | basename }}.bkp_{{ ansible_date_time.iso8601_basic_short }}"
    remote_src: true
    mode: "{{ item.mode }}"
  loop:
    - { path: "{{ existing_stats.results[0].stat.path }}", mode: '0644' }
    - { path: "{{ existing_stats.results[1].stat.path }}", mode: '0600' }
  when: existing_stats.results[0].stat.exists and existing_stats.results[1].stat.exists

